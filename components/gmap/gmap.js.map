{"version":3,"file":"gmap.js","sourceRoot":"","sources":["gmap.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnInit,AfterViewInit,DoCheck,OnDestroy,Input,Output,EventEmitter,IterableDiffers,ChangeDetectorRef,NgZone} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\ndeclare var google: any;\r\n\r\n@Component({\r\n    selector: 'p-gmap',\r\n    template: `<div [ngStyle]=\"style\" [class]=\"styleClass\"></div>`\r\n})\r\nexport class GMap implements AfterViewInit,DoCheck {\r\n\r\n    @Input() style: any;\r\n        \r\n    @Input() styleClass: string;\r\n    \r\n    @Input() options: any;\r\n    \r\n    @Input() overlays: any[];\r\n    \r\n    @Output() onMapClick: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onOverlayClick: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onOverlayDragStart: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onOverlayDrag: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onOverlayDragEnd: EventEmitter<any> = new EventEmitter();\r\n    \r\n    differ: any;\r\n    \r\n    map: any;\r\n\r\n    constructor(public el: ElementRef,differs: IterableDiffers, public cd: ChangeDetectorRef, public zone:NgZone) {\r\n        this.differ = differs.find([]).create(null);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.map = new google.maps.Map(this.el.nativeElement.children[0], this.options);\r\n        \r\n        if(this.overlays) {\r\n            for(let overlay of this.overlays) {\r\n                overlay.setMap(this.map);\r\n                this.bindOverlayEvents(overlay);\r\n            }\r\n        }\r\n        \r\n        this.map.addListener('click', (event) => {\r\n            this.zone.run(() => {\r\n                this.onMapClick.emit(event);\r\n            });\r\n        });\r\n    }\r\n    \r\n    bindOverlayEvents(overlay: any) {\r\n        overlay.addListener('click', (event) => {\r\n            this.zone.run(() => {\r\n                this.onOverlayClick.emit({\r\n                    originalEvent: event,\r\n                    'overlay': overlay,\r\n                    map: this.map\r\n                });\r\n            });\r\n        });\r\n        \r\n        if(overlay.getDraggable()) {\r\n            this.bindDragEvents(overlay);\r\n        }\r\n    }\r\n    \r\n    ngDoCheck() {\r\n        let changes = this.differ.diff(this.overlays);\r\n        \r\n        if(changes && this.map) {\r\n            changes.forEachRemovedItem((record) => {record.item.setMap(null)});\r\n            changes.forEachAddedItem((record) => {\r\n                record.item.setMap(this.map);\r\n                record.item.addListener('click', (event) => {\r\n                    this.zone.run(() => {\r\n                        this.onOverlayClick.emit({\r\n                            originalEvent: event,\r\n                            overlay: record.item,\r\n                            map: this.map\r\n                        });\r\n                    });\r\n                });\r\n                \r\n                if(record.item.getDraggable()) {\r\n                    this.bindDragEvents(record.item);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    bindDragEvents(overlay) {\r\n        overlay.addListener('dragstart', (event) => {\r\n            this.zone.run(() => {\r\n                this.onOverlayDragStart.emit({\r\n                    originalEvent: event,\r\n                    overlay: overlay,\r\n                    map: this.map\r\n                });\r\n            });\r\n        });\r\n        \r\n        overlay.addListener('drag', (event) => {\r\n            this.zone.run(() => {\r\n                this.onOverlayDrag.emit({\r\n                    originalEvent: event,\r\n                    overlay: overlay,\r\n                    map: this.map\r\n                });\r\n            });\r\n        });\r\n        \r\n        overlay.addListener('dragend', (event) => {\r\n            this.zone.run(() => {\r\n                this.onOverlayDragEnd.emit({\r\n                    originalEvent: event,\r\n                    overlay: overlay,\r\n                    map: this.map\r\n                });\r\n            });\r\n            \r\n        });\r\n    }\r\n    \r\n    getMap() {\r\n        return this.map;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [GMap],\r\n    declarations: [GMap]\r\n})\r\nexport class GMapModule { }"]}