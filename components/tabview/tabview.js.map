{"version":3,"file":"tabview.js","sourceRoot":"","sources":["tabview.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,Input,Output,EventEmitter,AfterContentInit,ContentChildren,QueryList} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {BlockableUI} from '../common/api';\r\n\r\n@Component({\r\n    selector: 'p-tabPanel',\r\n    template: `\r\n        <div class=\"ui-tabview-panel ui-widget-content\" [style.display]=\"selected ? 'block' : 'none'\" \r\n            *ngIf=\"!closed\" role=\"tabpanel\" [attr.aria-hidden]=\"!selected\">\r\n            <ng-content></ng-content>\r\n        </div>\r\n    `,\r\n})\r\nexport class TabPanel {\r\n\r\n    @Input() header: string;\r\n\r\n    @Input() selected: boolean;\r\n    \r\n    @Input() disabled: boolean;\r\n    \r\n    @Input() closable: boolean;\r\n    \r\n    @Input() headerStyle: any;\r\n    \r\n    @Input() headerStyleClass: string;\r\n    \r\n    @Input() leftIcon: string;\r\n    \r\n    @Input() rightIcon: string;\r\n    \r\n    public hoverHeader: boolean;\r\n    \r\n    public closed: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'p-tabView',\r\n    template: `\r\n        <div [ngClass]=\"'ui-tabview ui-widget ui-widget-content ui-corner-all ui-tabview-' + orientation\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <ul class=\"ui-tabview-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\" role=\"tablist\">\r\n                <template ngFor let-tab [ngForOf]=\"tabs\">\r\n                    <li [class]=\"getDefaultHeaderClass(tab)\" [ngStyle]=\"tab.headerStyle\" role=\"tab\"\r\n                        [ngClass]=\"{'ui-tabview-selected ui-state-active': tab.selected, 'ui-state-hover': tab.hoverHeader&&!tab.disabled, 'ui-state-disabled': tab.disabled}\"\r\n                        (mouseenter)=\"tab.hoverHeader=true\" (mouseleave)=\"tab.hoverHeader=false\" (click)=\"open($event,tab)\" *ngIf=\"!tab.closed\"\r\n                        [attr.aria-expanded]=\"tab.selected\" [attr.aria-selected]=\"tab.selected\">\r\n                        <a href=\"#\">\r\n                            <span class=\"ui-tabview-left-icon fa\" [ngClass]=\"tab.leftIcon\" *ngIf=\"tab.leftIcon\"></span>\r\n                            {{tab.header}}\r\n                            <span class=\"ui-tabview-right-icon fa\" [ngClass]=\"tab.rightIcon\" *ngIf=\"tab.rightIcon\"></span>\r\n                        </a>\r\n                        <span *ngIf=\"tab.closable\" class=\"ui-tabview-close fa fa-close\" (click)=\"close($event,tab)\"></span>\r\n                    </li>\r\n                </template>\r\n            </ul>\r\n            <div class=\"ui-tabview-panels\">\r\n                <ng-content></ng-content>\r\n            </div>\r\n        </div>\r\n    `,\r\n})\r\nexport class TabView implements AfterContentInit,BlockableUI {\r\n\r\n    @Input() orientation: string = 'top';\r\n    \r\n    @Input() style: any;\r\n    \r\n    @Input() styleClass: string;\r\n    \r\n    @Input() controlClose: boolean;\r\n    \r\n    @ContentChildren(TabPanel) tabPanels: QueryList<TabPanel>;\r\n\r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onClose: EventEmitter<any> = new EventEmitter();\r\n    \r\n    initialized: boolean;\r\n    \r\n    tabs: TabPanel[];\r\n\r\n    constructor(public el: ElementRef) {}\r\n    \r\n    ngAfterContentInit() {\r\n        this.initTabs();\r\n        \r\n        this.tabPanels.changes.subscribe(_ => {\r\n            this.initTabs();\r\n        });\r\n    }\r\n    \r\n    initTabs(): void {\r\n        this.tabs = this.tabPanels.toArray();\r\n        let selectedTab: TabPanel = this.findSelectedTab();\r\n        if(!selectedTab && this.tabs.length) {\r\n            this.tabs[0].selected = true;\r\n        }\r\n    }\r\n            \r\n    open(event: Event, tab: TabPanel) {\r\n        if(tab.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        \r\n        if(!tab.selected) {\r\n            let selectedTab: TabPanel = this.findSelectedTab();\r\n            if(selectedTab) {\r\n                selectedTab.selected = false\r\n            }\r\n            tab.selected = true;\r\n            this.onChange.emit({originalEvent: event, index: this.findTabIndex(tab)});\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    \r\n    close(event: Event, tab: TabPanel) {  \r\n        if(this.controlClose) {\r\n            this.onClose.emit({\r\n                originalEvent: event, \r\n                index: this.findTabIndex(tab),\r\n                close: () => {\r\n                    this.closeTab(tab);\r\n                }}\r\n            );\r\n        }\r\n        else {\r\n            this.closeTab(tab);\r\n            this.onClose.emit({\r\n                originalEvent: event, \r\n                index: this.findTabIndex(tab)\r\n            });\r\n        }\r\n        \r\n        event.stopPropagation();\r\n    }\r\n    \r\n    closeTab(tab: TabPanel) {\r\n        if(tab.selected) {\r\n            tab.selected = false;\r\n            for(let i = 0; i < this.tabs.length; i++) {\r\n                let tabPanel = this.tabs[i];\r\n                if(!tabPanel.closed&&!tab.disabled) {\r\n                    tabPanel.selected = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n        tab.closed = true;\r\n    }\r\n    \r\n    findSelectedTab() {\r\n        for(let i = 0; i < this.tabs.length; i++) {\r\n            if(this.tabs[i].selected) {\r\n                return this.tabs[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    findTabIndex(tab: TabPanel) {\r\n        let index = -1;\r\n        for(let i = 0; i < this.tabs.length; i++) {\r\n            if(this.tabs[i] == tab) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n    \r\n    getDefaultHeaderClass(tab:TabPanel) {\r\n        let styleClass = 'ui-state-default ui-corner-' + this.orientation; \r\n        if(tab.headerStyleClass) {\r\n            styleClass = styleClass + \" \" + tab.headerStyleClass;\r\n        }\r\n        return styleClass;\r\n    }\r\n    \r\n    getBlockableElement(): HTMLElement {\r\n        return this.el.nativeElement.children[0];\r\n    }\r\n}\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [TabView,TabPanel],\r\n    declarations: [TabView,TabPanel]\r\n})\r\nexport class TabViewModule { }"]}