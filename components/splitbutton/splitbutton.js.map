{"version":3,"file":"splitbutton.js","sourceRoot":"","sources":["splitbutton.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnInit,OnDestroy,Input,Output,EventEmitter,ContentChildren,QueryList,Renderer} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from '../dom/domhandler';\r\nimport {MenuItem} from '../common/api';\r\nimport {ButtonModule} from '../button/button';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'p-splitButton',\r\n    template: `\r\n        <div #container [ngClass]=\"{'ui-splitbutton ui-buttonset ui-widget':true,'ui-state-disabled':disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <button #defaultbtn type=\"button\" pButton [icon]=\"icon\" [label]=\"label\" cornerStyleClass=\"ui-corner-left\" (click)=\"onDefaultButtonClick($event)\" [disabled]=\"disabled\">\r\n            </button><button type=\"button\" pButton class=\"ui-splitbutton-menubutton\" icon=\"fa-caret-down\" cornerStyleClass=\"ui-corner-right\" (click)=\"onDropdownClick($event,menu,container)\" [disabled]=\"disabled\"></button>\r\n            <div #menu [ngClass]=\"'ui-menu ui-menu-dynamic ui-widget ui-widget-content ui-corner-all ui-helper-clearfix ui-shadow'\" [style.display]=\"menuVisible ? 'block' : 'none'\"\r\n                    [ngStyle]=\"menuStyle\" [class]=\"menuStyleClass\">\r\n                <ul class=\"ui-menu-list ui-helper-reset\">\r\n                    <li class=\"ui-menuitem ui-widget ui-corner-all\" role=\"menuitem\" *ngFor=\"let item of model\"\r\n                        (mouseenter)=\"hoveredItem=item\" (mouseleave)=\"hoveredItem=null\">\r\n                        <a [href]=\"item.url||'#'\" \r\n                        [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-hover':(hoveredItem==item&&!item.disabled),'ui-state-disabled':item.disabled}\" \r\n                        (click)=\"itemClick($event,item)\">\r\n                            <span [ngClass]=\"'ui-menuitem-icon fa fa-fw'\" [class]=\"item.icon\" *ngIf=\"item.icon\"></span>\r\n                            <span class=\"ui-menuitem-text\">{{item.label}}</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    `,\r\n    providers: [DomHandler]\r\n})\r\nexport class SplitButton implements OnInit,OnDestroy {\r\n\r\n    @Input() model: MenuItem[];\r\n\r\n    @Input() icon: string;\r\n\r\n    @Input() iconPos: string = 'left';\r\n        \r\n    @Input() label: string;\r\n    \r\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Input() style: any;\r\n    \r\n    @Input() styleClass: string;\r\n    \r\n    @Input() menuStyle: any;\r\n    \r\n    @Input() menuStyleClass: string;\r\n    \r\n    @Input() disabled: boolean;\r\n            \r\n    public hoveredItem: any;\r\n    \r\n    public menuVisible: boolean = false;\r\n    \r\n    public documentClickListener: any;\r\n\r\n    constructor(public el: ElementRef, public domHandler: DomHandler, public renderer: Renderer, public router: Router) {}\r\n    \r\n    ngOnInit() {\r\n        this.documentClickListener = this.renderer.listenGlobal('body', 'click', () => {\r\n            this.menuVisible = false;\r\n        });\r\n    }\r\n    \r\n    onDefaultButtonClick(event: Event) {\r\n        this.onClick.emit(event);\r\n    }\r\n    \r\n    itemClick(event: Event, item: MenuItem)Â {\r\n        if(item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        \r\n        if(!item.url||item.routerLink) {\r\n            event.preventDefault();\r\n        }\r\n        \r\n        if(item.command) {\r\n            if(!item.eventEmitter) {\r\n                item.eventEmitter = new EventEmitter();\r\n                item.eventEmitter.subscribe(item.command);\r\n            }\r\n            \r\n            item.eventEmitter.emit(event);\r\n        }\r\n        \r\n        this.menuVisible = false;\r\n        \r\n        if(item.routerLink) {\r\n            this.router.navigate(item.routerLink);\r\n        }\r\n    }\r\n    \r\n    onDropdownClick(event: Event, menu: Element, container: Element) {\r\n        this.menuVisible= !this.menuVisible;\r\n        this.domHandler.relativePosition(menu, container);\r\n        this.domHandler.fadeIn(menu,25);\r\n        event.stopPropagation();\r\n    }\r\n        \r\n    ngOnDestroy() {\r\n        this.documentClickListener();\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,ButtonModule],\r\n    exports: [SplitButton,ButtonModule],\r\n    declarations: [SplitButton]\r\n})\r\nexport class SplitButtonModule { }"]}