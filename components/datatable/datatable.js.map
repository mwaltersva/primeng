{"version":3,"file":"datatable.js","sourceRoot":"","sources":["datatable.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,AfterContentInit,AfterViewInit,AfterViewChecked,OnInit,OnDestroy,DoCheck,Input,ViewContainerRef,\r\n        Output,SimpleChange,EventEmitter,ContentChild,ContentChildren,Renderer,IterableDiffers,QueryList,TemplateRef,ChangeDetectorRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms'\r\nimport {SharedModule} from '../common/shared';\r\nimport {PaginatorModule} from '../paginator/paginator';\r\nimport {InputTextModule} from '../inputtext/inputtext';\r\nimport {Column,Header,Footer,HeaderColumnGroup,FooterColumnGroup} from '../common/shared';\r\nimport {LazyLoadEvent,FilterMetadata,SortMeta} from '../common/api';\r\nimport {DomHandler} from '../dom/domhandler';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {BlockableUI} from '../common/api';\r\n\r\n@Component({\r\n    selector: 'p-dtRadioButton',\r\n    template: `\r\n        <div class=\"ui-radiobutton ui-widget\">\r\n            <div class=\"ui-helper-hidden-accessible\">\r\n                <input type=\"radio\" [checked]=\"checked\">\r\n            </div>\r\n            <div class=\"ui-radiobutton-box ui-widget ui-radiobutton-relative ui-state-default\" (click)=\"handleClick($event)\"\r\n                        (mouseenter)=\"hover=true\" (mouseleave)=\"hover=false\"\r\n                        [ngClass]=\"{'ui-state-hover':hover,'ui-state-active':checked}\">\r\n                <span class=\"ui-radiobutton-icon\" [ngClass]=\"{'fa fa-fw fa-circle':checked}\"></span>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class DTRadioButton {\r\n    \r\n    @Input() checked: boolean;\r\n\r\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\r\n    \r\n    public hover: boolean;\r\n    \r\n    handleClick(event) {\r\n        this.onClick.emit(event);\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-dtCheckbox',\r\n    template: `\r\n        <div class=\"ui-chkbox ui-widget\">\r\n            <div class=\"ui-helper-hidden-accessible\">\r\n                <input type=\"checkbox\" [checked]=\"checked\">\r\n            </div>\r\n            <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" (click)=\"handleClick($event)\"\r\n                        (mouseover)=\"hover=true\" (mouseout)=\"hover=false\" \r\n                        [ngClass]=\"{'ui-state-hover':hover&&!disabled,'ui-state-active':checked&&!disabled,'ui-state-disabled':disabled}\">\r\n                <span class=\"ui-chkbox-icon ui-c\" [ngClass]=\"{'fa fa-fw fa-check':checked}\"></span>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class DTCheckbox {\r\n    \r\n    @Input() checked: boolean;\r\n    \r\n    @Input() disabled: boolean;\r\n\r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n    \r\n    public hover: boolean;\r\n    \r\n    handleClick(event) {\r\n        if(!this.disabled) {\r\n            this.onChange.emit({originalEvent: event, checked: !this.checked});\r\n        }\r\n\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-rowExpansionLoader',\r\n    template: ``\r\n})\r\nexport class RowExpansionLoader {\r\n        \r\n    @Input() template: TemplateRef<any>;\r\n    \r\n    @Input() rowData: any;\r\n    \r\n    constructor(public viewContainer: ViewContainerRef) {}\r\n    \r\n    ngOnInit() {\r\n        let view = this.viewContainer.createEmbeddedView(this.template, {\r\n            '\\$implicit': this.rowData\r\n        });\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-dataTable',\r\n    template: `\r\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" \r\n            [ngClass]=\"{'ui-datatable ui-widget':true,'ui-datatable-reflow':responsive,'ui-datatable-stacked':stacked,'ui-datatable-resizable':resizableColumns,'ui-datatable-scrollable':scrollable}\">\r\n            <div class=\"ui-datatable-header ui-widget-header\" *ngIf=\"header\" [ngStyle]=\"{'width': scrollWidth}\">\r\n                <ng-content select=\"header\"></ng-content>\r\n            </div>\r\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"ui-paginator-bottom\"\r\n                (onPageChange)=\"paginate($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && paginatorPosition!='bottom' || paginatorPosition =='both'\"></p-paginator>\r\n            <div class=\"ui-datatable-tablewrapper\" *ngIf=\"!scrollable\">\r\n                <table [class]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\r\n                    <thead>\r\n                        <tr *ngIf=\"!headerColumnGroup\" class=\"ui-state-default\">\r\n                            <th #headerCell *ngFor=\"let col of columns;let lastCol = last\" [ngStyle]=\"col.style\" [class]=\"col.styleClass\" [style.display]=\"col.hidden ? 'none' : 'table-cell'\"\r\n                                (click)=\"sort($event,col)\" (mouseenter)=\"hoveredHeader = $event.target\" (mouseleave)=\"hoveredHeader = null\"\r\n                                [ngClass]=\"{'ui-state-default ui-unselectable-text':true, 'ui-state-hover': headerCell === hoveredHeader && col.sortable,'ui-state-focus': headerCell === focusedHeader && col.sortable,\r\n                                'ui-sortable-column': col.sortable,'ui-state-active': isSorted(col), 'ui-resizable-column': resizableColumns,'ui-selection-column':col.selectionMode}\" \r\n                                (dragstart)=\"onColumnDragStart($event)\" (dragover)=\"onColumnDragover($event)\" (dragleave)=\"onColumnDragleave($event)\" (drop)=\"onColumnDrop($event)\" (mousedown)=\"onHeaderMousedown($event,headerCell)\"\r\n                                [attr.tabindex]=\"col.sortable ? tabindex : null\" (focus)=\"focusedHeader=$event.target\" (blur)=\"focusedHeader=null\" (keydown)=\"onHeaderKeydown($event,col)\">\r\n                                <span class=\"ui-column-resizer\" *ngIf=\"resizableColumns && ((columnResizeMode == 'fit' && !lastCol) || columnResizeMode == 'expand')\" (mousedown)=\"initColumnResize($event)\"></span>\r\n                                <span class=\"ui-column-title\" *ngIf=\"!col.selectionMode&&!col.headerTemplate\">{{col.header}}</span>\r\n                                <span class=\"ui-column-title\" *ngIf=\"col.headerTemplate\">\r\n                                    <p-columnHeaderTemplateLoader [column]=\"col\"></p-columnHeaderTemplateLoader>\r\n                                </span>\r\n                                <span class=\"ui-sortable-column-icon fa fa-fw fa-sort\" *ngIf=\"col.sortable\"\r\n                                     [ngClass]=\"{'fa-sort-desc': (getSortOrder(col) == -1),'fa-sort-asc': (getSortOrder(col) == 1)}\"></span>\r\n                                <input type=\"text\" pInputText class=\"ui-column-filter\" [attr.placeholder]=\"col.filterPlaceholder\" *ngIf=\"col.filter\" [value]=\"filters[col.field] ? filters[col.field].value : ''\" (click)=\"onFilterInputClick($event)\" (keyup)=\"onFilterKeyup($event.target.value, col.field, col.filterMatchMode)\"/>\r\n                                <p-dtCheckbox *ngIf=\"col.selectionMode=='multiple'\" (onChange)=\"toggleRowsWithCheckbox($event)\" [checked]=\"allSelected\" [disabled]=\"isEmpty()\"></p-dtCheckbox>\r\n                            </th>\r\n                        </tr>\r\n                        <template [ngIf]=\"headerColumnGroup\">\r\n                            <tr *ngFor=\"let headerRow of headerColumnGroup.rows\" class=\"ui-state-default\">\r\n                                <th #headerCell *ngFor=\"let col of headerRow.columns\" [ngStyle]=\"col.style\" [class]=\"col.styleClass\" [attr.colspan]=\"col.colspan\" [attr.rowspan]=\"col.rowspan\"\r\n                                    (click)=\"sort($event,col)\" (mouseenter)=\"hoveredHeader = $event.target\" (mouseleave)=\"hoveredHeader = null\" [style.display]=\"col.hidden ? 'none' : 'table-cell'\"\r\n                                    [ngClass]=\"{'ui-state-default ui-unselectable-text':true, 'ui-state-hover': headerCell === hoveredHeader && col.sortable,\r\n                                    'ui-sortable-column': col.sortable,'ui-state-active': isSorted(col), 'ui-resizable-column': resizableColumns}\"\r\n                                    [tabindex]=\"col.sortable ? tabindex : -1\" (focus)=\"focusedHeader=$event.target\" (blur)=\"focusedHeader=null\" (keydown)=\"onHeaderKeydown($event,col)\">\r\n                                    <span class=\"ui-column-resizer\" *ngIf=\"resizableColumns && ((columnResizeMode == 'fit' && !lastCol) || columnResizeMode == 'expand')\" (mousedown)=\"initColumnResize($event)\"></span>\r\n                                    <span class=\"ui-column-title\" *ngIf=\"!col.selectionMode&&!col.headerTemplate\">{{col.header}}</span>\r\n                                    <span class=\"ui-column-title\" *ngIf=\"col.headerTemplate\">\r\n                                        <p-columnHeaderTemplateLoader [column]=\"col\"></p-columnHeaderTemplateLoader>\r\n                                    </span>\r\n                                    <span class=\"ui-sortable-column-icon fa fa-fw fa-sort\" *ngIf=\"col.sortable\"\r\n                                         [ngClass]=\"{'fa-sort-desc': (getSortOrder(col) == -1),'fa-sort-asc': (getSortOrder(col) == 1)}\"></span>\r\n                                    <input type=\"text\" pInputText class=\"ui-column-filter\" [attr.placeholder]=\"col.filterPlaceholder\" *ngIf=\"col.filter\" [value]=\"filters[col.field] ? filters[col.field].value : ''\" (click)=\"onFilterInputClick($event)\" (keyup)=\"onFilterKeyup($event.target.value, col.field, col.filterMatchMode)\"/>\r\n                                </th>\r\n                            </tr>\r\n                        </template>\r\n                    </thead>\r\n                    <tfoot *ngIf=\"hasFooter()\">\r\n                        <tr *ngIf=\"!footerColumnGroup\">\r\n                            <th *ngFor=\"let col of columns\" [ngStyle]=\"col.style\" [class]=\"col.styleClass\" [ngClass]=\"{'ui-state-default':true}\" [style.display]=\"col.hidden ? 'none' : 'table-cell'\">\r\n                                <span class=\"ui-column-footer\" *ngIf=\"!col.footerTemplate\">{{col.footer}}</span>\r\n                                <span class=\"ui-column-footer\" *ngIf=\"col.footerTemplate\">\r\n                                    <p-columnFooterTemplateLoader [column]=\"col\"></p-columnFooterTemplateLoader>\r\n                                </span>\r\n                            </th>\r\n                        </tr>\r\n                        <template [ngIf]=\"footerColumnGroup\">\r\n                            <tr *ngFor=\"let footerRow of footerColumnGroup.rows\">\r\n                                <th *ngFor=\"let col of footerRow.columns\" [ngStyle]=\"col.style\" [class]=\"col.styleClass\"\r\n                                    [attr.colspan]=\"col.colspan\" [attr.rowspan]=\"col.rowspan\" [style.display]=\"col.hidden ? 'none' : 'table-cell'\"\r\n                                    [ngClass]=\"{'ui-state-default':true}\">\r\n                                    <span class=\"ui-column-footer\" *ngIf=\"!col.footerTemplate\">{{col.footer}}</span>\r\n                                    <span class=\"ui-column-footer\" *ngIf=\"col.footerTemplate\">\r\n                                        <p-columnFooterTemplateLoader [column]=\"col\"></p-columnFooterTemplateLoader>\r\n                                    </span>\r\n                                </th>\r\n                            </tr>\r\n                        </template>\r\n                    </tfoot>\r\n                    <tbody class=\"ui-datatable-data ui-widget-content\">\r\n                        <template ngFor let-rowData [ngForOf]=\"dataToRender\" let-even=\"even\" let-odd=\"odd\" let-rowIndex=\"index\" [ngForTrackBy]=\"rowTrackBy\">\r\n                            <tr #rowElement [class]=\"getRowStyleClass(rowData,rowIndex)\" (mouseenter)=\"hoveredRow = $event.target\" (mouseleave)=\"hoveredRow = null\"\r\n                                    (click)=\"handleRowClick($event, rowData)\" (dblclick)=\"rowDblclick($event,rowData)\" (contextmenu)=\"onRowRightClick($event,rowData)\" (touchstart)=\"handleRowTap($event, rowData)\"\r\n                                    [ngClass]=\"{'ui-datatable-even':even,'ui-datatable-odd':odd,'ui-state-hover': (selectionMode && rowElement == hoveredRow), 'ui-state-highlight': isSelected(rowData)}\">\r\n                                <td *ngFor=\"let col of columns;let colIndex = index\" [ngStyle]=\"col.style\" [class]=\"col.styleClass\" [style.display]=\"col.hidden ? 'none' : 'table-cell'\"\r\n                                    [ngClass]=\"{'ui-editable-column':col.editable,'ui-selection-column':col.selectionMode}\" (click)=\"switchCellToEditMode($event.target,col,rowData)\">\r\n                                    <span class=\"ui-column-title\" *ngIf=\"responsive\">{{col.header}}</span>\r\n                                    <span class=\"ui-cell-data\" *ngIf=\"!col.bodyTemplate && !col.expander && !col.selectionMode\">{{resolveFieldData(rowData,col.field)}}</span>\r\n                                    <span class=\"ui-cell-data\" *ngIf=\"col.bodyTemplate\">\r\n                                        <p-columnBodyTemplateLoader [column]=\"col\" [rowData]=\"rowData\" [rowIndex]=\"rowIndex + first\"></p-columnBodyTemplateLoader>\r\n                                    </span>\r\n                                    <input type=\"text\" class=\"ui-cell-editor ui-state-highlight\" *ngIf=\"col.editable\" [(ngModel)]=\"rowData[col.field]\"\r\n                                            (blur)=\"switchCellToViewMode($event.target,col,rowData,true)\" (keydown)=\"onCellEditorKeydown($event, col, rowData, colIndex)\"/>\r\n                                    <div class=\"ui-row-toggler fa fa-fw ui-c\" [ngClass]=\"{'fa-chevron-circle-down':isRowExpanded(rowData), 'fa-chevron-circle-right': !isRowExpanded(rowData)}\"\r\n                                        *ngIf=\"col.expander\" (click)=\"toggleRow(rowData)\"></div>\r\n                                    <p-dtRadioButton *ngIf=\"col.selectionMode=='single'\" (onClick)=\"selectRowWithRadio($event, rowData)\" [checked]=\"isSelected(rowData)\"></p-dtRadioButton>\r\n                                    <p-dtCheckbox *ngIf=\"col.selectionMode=='multiple'\" (onChange)=\"toggleRowWithCheckbox($event,rowData)\" [checked]=\"isSelected(rowData)\"></p-dtCheckbox>\r\n                                </td>\r\n                            </tr>\r\n                            <tr *ngIf=\"expandableRows && isRowExpanded(rowData)\">\r\n                                <td [attr.colspan]=\"visibleColumns().length\">\r\n                                    <p-rowExpansionLoader [rowData]=\"rowData\" [template]=\"rowExpansionTemplate.first\"></p-rowExpansionLoader>\r\n                                </td>\r\n                            </tr>\r\n                        </template>\r\n                        \r\n                        <tr *ngIf=\"isEmpty()\" class=\"ui-widget-content\">\r\n                            <td [attr.colspan]=\"visibleColumns().length\" class=\"ui-datatable-emptymessage\">{{emptyMessage}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"ui-column-resizer-helper ui-state-highlight\" style=\"display:none\"></div>\r\n                <span class=\"fa fa-arrow-down ui-datatable-reorder-indicator-up\" style=\"position: absolute; display: none;\"></span>\r\n                <span class=\"fa fa-arrow-up ui-datatable-reorder-indicator-down\" style=\"position: absolute; display: none;\"></span>\r\n            </div>\r\n            <div class=\"ui-widget-header ui-datatable-scrollable-header\" *ngIf=\"scrollable\" [ngStyle]=\"{'width': scrollWidth}\">\r\n                <div class=\"ui-datatable-scrollable-header-box\">\r\n                    <table [class]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th #headerCell *ngFor=\"let col of columns\" [ngStyle]=\"col.style\" [class]=\"col.styleClass\" [style.display]=\"col.hidden ? 'none' : 'table-cell'\"\r\n                                    (click)=\"sort($event,col)\" (mouseenter)=\"hoveredHeader = $event.target\" (mouseleave)=\"hoveredHeader = null\"\r\n                                    [ngClass]=\"{'ui-state-default ui-unselectable-text':true, 'ui-state-hover': headerCell === hoveredHeader && col.sortable,\r\n                                    'ui-sortable-column': col.sortable,'ui-state-active': isSorted(col), 'ui-resizable-column': resizableColumns,'ui-selection-column':col.selectionMode}\"\r\n                                    [tabindex]=\"col.sortable ? tabindex : -1\" (focus)=\"focusedHeader=$event.target\" (blur)=\"focusedHeader=null\" (keydown)=\"onHeaderKeydown($event,col)\">\r\n                                    <span class=\"ui-column-resizer\" *ngIf=\"resizableColumns && ((columnResizeMode == 'fit' && !lastCol) || columnResizeMode == 'expand')\"></span>\r\n                                    <span class=\"ui-column-title\" *ngIf=\"!col.selectionMode&&!col.headerTemplate\">{{col.header}}</span>\r\n                                    <span class=\"ui-column-title\" *ngIf=\"col.headerTemplate\">\r\n                                        <p-columnHeaderTemplateLoader [column]=\"col\"></p-columnHeaderTemplateLoader>\r\n                                    </span>\r\n                                    <span class=\"ui-sortable-column-icon fa fa-fw fa-sort\" *ngIf=\"col.sortable\"\r\n                                         [ngClass]=\"{'fa-sort-desc': (col.field === sortField) && (sortOrder == -1),'fa-sort-asc': (col.field === sortField) && (sortOrder == 1)}\"></span>\r\n                                    <input type=\"text\" pInputText class=\"ui-column-filter\" [attr.placeholder]=\"col.filterPlaceholder\" *ngIf=\"col.filter\" (click)=\"onFilterInputClick($event)\" (keyup)=\"onFilterKeyup($event.target.value, col.field, col.filterMatchMode)\"/>\r\n                                    <p-dtCheckbox *ngIf=\"col.selectionMode=='multiple'\" (onChange)=\"toggleRowsWithCheckbox($event)\" [checked]=\"allSelected\" [disabled]=\"isEmpty()\"></p-dtCheckbox>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class=\"ui-datatable-scrollable-body\" *ngIf=\"scrollable\" [ngStyle]=\"{'width': scrollWidth}\">\r\n                <table [class]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\r\n                    <tbody class=\"ui-datatable-data ui-widget-content\">\r\n                        <template ngFor let-rowData [ngForOf]=\"dataToRender\" let-even=\"even\" let-odd=\"odd\" let-rowIndex=\"index\" [ngForTrackBy]=\"rowTrackBy\">\r\n                            <tr #rowElement class=\"ui-widget-content\" (mouseenter)=\"hoveredRow = $event.target\" (mouseleave)=\"hoveredRow = null\"\r\n                                    (click)=\"handleRowClick($event, rowData)\" (dblclick)=\"rowDblclick($event,rowData)\" (contextmenu)=\"onRowRightClick($event,rowData)\"\r\n                                    [ngClass]=\"{'ui-datatable-even':even,'ui-datatable-odd':odd,'ui-state-hover': (selectionMode && rowElement == hoveredRow), 'ui-state-highlight': isSelected(rowData)}\">\r\n                                <td *ngFor=\"let col of columns; let colIndex = index;\" [ngStyle]=\"col.style\" [class]=\"col.styleClass\" [style.display]=\"col.hidden ? 'none' : 'table-cell'\"\r\n                                    [ngClass]=\"{'ui-editable-column':col.editable,'ui-selection-column':col.selectionMode}\" (click)=\"switchCellToEditMode($event.target,col,rowData)\">\r\n                                    <span class=\"ui-column-title\" *ngIf=\"responsive\">{{col.header}}</span>\r\n                                    <span class=\"ui-cell-data\" *ngIf=\"!col.bodyTemplate\">{{resolveFieldData(rowData,col.field)}}</span>\r\n                                    <span class=\"ui-cell-data\" *ngIf=\"col.bodyTemplate\">\r\n                                        <p-columnBodyTemplateLoader [column]=\"col\" [rowData]=\"rowData\" [rowIndex]=\"rowIndex + first\"></p-columnBodyTemplateLoader>\r\n                                    </span>\r\n                                    <input type=\"text\" class=\"ui-cell-editor ui-state-highlight\" *ngIf=\"col.editable\" [(ngModel)]=\"rowData[col.field]\"\r\n                                            (blur)=\"switchCellToViewMode($event.target,col,rowData,true)\" (keydown)=\"onCellEditorKeydown($event, col, rowData, colIndex)\"/>\r\n                                    <div class=\"ui-row-toggler fa fa-fw ui-c\" [ngClass]=\"{'fa-chevron-circle-down':isRowExpanded(rowData), 'fa-chevron-circle-right': !isRowExpanded(rowData)}\"\r\n                                        *ngIf=\"col.expander\" (click)=\"toggleRow(rowData)\"></div>\r\n                                    <p-dtRadioButton *ngIf=\"col.selectionMode=='single'\" (onClick)=\"selectRowWithRadio($event, rowData)\" [checked]=\"isSelected(rowData)\"></p-dtRadioButton>\r\n                                    <p-dtCheckbox *ngIf=\"col.selectionMode=='multiple'\" (onChange)=\"toggleRowWithCheckbox($event,rowData)\" [checked]=\"isSelected(rowData)\"></p-dtCheckbox>\r\n                                </td>\r\n                            </tr>\r\n                            <tr *ngIf=\"expandableRows && isRowExpanded(rowData)\">\r\n                                <td [attr.colspan]=\"visibleColumns().length\">\r\n                                    <p-rowExpansionLoader [rowData]=\"rowData\" [template]=\"rowExpansionTemplate.first\"></p-rowExpansionLoader>\r\n                                </td>\r\n                            </tr>\r\n                        </template>\r\n                        \r\n                        <tr *ngIf=\"isEmpty()\" class=\"ui-widget-content\">\r\n                            <td [attr.colspan]=\"visibleColumns().length\" class=\"ui-datatable-emptymessage\">{{emptyMessage}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"ui-paginator-bottom\"\r\n                (onPageChange)=\"paginate($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && paginatorPosition!='top' || paginatorPosition =='both'\"></p-paginator>\r\n            <div class=\"ui-datatable-footer ui-widget-header\" *ngIf=\"footer\">\r\n                <ng-content select=\"footer\"></ng-content>\r\n            </div>\r\n        </div>\r\n    `,\r\n    providers: [DomHandler]\r\n})\r\nexport class DataTable implements AfterViewChecked,AfterViewInit,AfterContentInit,OnInit,DoCheck,OnDestroy,BlockableUI {\r\n\r\n    @Input() value: any[];\r\n\r\n    @Input() paginator: boolean;\r\n\r\n    @Input() rows: number;\r\n\r\n    @Input() totalRecords: number;\r\n\r\n    @Input() pageLinks: number = 5;\r\n\r\n    @Input() rowsPerPageOptions: number[];\r\n\r\n    @Input() responsive: boolean;\r\n    \r\n    @Input() stacked: boolean;\r\n\r\n    @Input() selectionMode: string;\r\n\r\n    @Input() selection: any;\r\n\r\n    @Output() selectionChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() editable: boolean;\r\n    \r\n    @Output() onRowClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onRowSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onRowUnselect: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onRowDblclick: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onHeaderCheckboxToggle: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onContextMenuSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() filterDelay: number = 300;\r\n\r\n    @Input() lazy: boolean;\r\n\r\n    @Output() onLazyLoad: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() resizableColumns: boolean;\r\n\r\n    @Input() columnResizeMode: string = 'fit';\r\n\r\n    @Output() onColResize: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() reorderableColumns: boolean;\r\n\r\n    @Output() onColReorder: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() scrollable: boolean;\r\n\r\n    @Input() scrollHeight: any;\r\n\r\n    @Input() scrollWidth: any;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n    \r\n    @Input() tableStyle: any;\r\n\r\n    @Input() tableStyleClass: string;\r\n\r\n    @Input() globalFilter: any;\r\n\r\n    @Input() sortMode: string = 'single';\r\n\r\n    @Input() sortField: string;\r\n\r\n    @Input() sortOrder: number = 1;\r\n\r\n    @Input() multiSortMeta: SortMeta[];\r\n    \r\n    @Input() contextMenu: any;\r\n    \r\n    @Input() csvSeparator: string = ',';\r\n    \r\n    @Input() exportFilename: string = 'download';\r\n    \r\n    @Input() emptyMessage: string = 'No records found';\r\n    \r\n    @Input() paginatorPosition: string = 'bottom';\r\n    \r\n    @Input() expandedRows: any[];\r\n    \r\n    @Input() rowTrackBy: Function;\r\n    \r\n    @Output() onEditInit: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onEditComplete: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onEdit: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onEditCancel: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onPage: EventEmitter<any> = new EventEmitter();\r\n        \r\n    @Output() onSort: EventEmitter<any> = new EventEmitter();\r\n            \r\n    @Output() onFilter: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ContentChild(Header) header;\r\n\r\n    @ContentChild(Footer) footer;\r\n    \r\n    @Input() expandableRows: boolean;\r\n    \r\n    @Input() tabindex: number = 1;\r\n    \r\n    @Input() rowStyleClass: Function;\r\n    \r\n    @Output() onRowExpand: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onRowCollapse: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @ContentChildren(TemplateRef) rowExpansionTemplate: QueryList<TemplateRef<any>>;\r\n    \r\n    @ContentChildren(Column) cols: QueryList<Column>;\r\n    \r\n    @ContentChild(HeaderColumnGroup) headerColumnGroup: HeaderColumnGroup;\r\n    \r\n    @ContentChild(FooterColumnGroup) footerColumnGroup: FooterColumnGroup;\r\n    \r\n    public dataToRender: any[];\r\n\r\n    public first: number = 0;\r\n\r\n    public page: number = 0;\r\n\r\n    public filterTimeout: any;\r\n\r\n    public filters: {[s: string]: FilterMetadata;} = {};\r\n\r\n    public filteredValue: any[];\r\n\r\n    public columns: Column[];\r\n\r\n    public columnsChanged: boolean = false;\r\n    \r\n    public dataChanged: boolean = false;\r\n    \r\n    public stopSortPropagation: boolean;\r\n    \r\n    public sortColumn: Column;\r\n    \r\n    public percentageScrollHeight: boolean;\r\n        \r\n    public scrollBody: any;\r\n    \r\n    public scrollHeader: any\r\n    \r\n    public scrollHeaderBox: any;\r\n    \r\n    public bodyScrollListener: any;\r\n    \r\n    public headerScrollListener: any;\r\n    \r\n    public resizeScrollListener: any;\r\n    \r\n    public columnResizing: boolean;\r\n    \r\n    public lastPageX: number;\r\n        \r\n    public documentColumnResizeListener: any;\r\n    \r\n    public documentColumnResizeEndListener: any;\r\n    \r\n    public resizerHelper: any;\r\n    \r\n    public resizeColumn: any;\r\n    \r\n    public reorderIndicatorUp: any;\r\n    \r\n    public reorderIndicatorDown: any;\r\n    \r\n    public draggedColumn: any;\r\n    \r\n    public dropPosition: number;\r\n            \r\n    public tbody: any;\r\n    \r\n    public rowTouch: boolean;\r\n    \r\n    public editingCell: any;\r\n    \r\n    public lazyFilteredByUser: boolean;\r\n\r\n    differ: any;\r\n\r\n    globalFilterFunction: any;\r\n\r\n    preventBlurOnEdit: boolean;\r\n    \r\n    columnsSubscription: Subscription;\r\n    \r\n    constructor(public el: ElementRef, public domHandler: DomHandler, differs: IterableDiffers, \r\n            public renderer: Renderer, private changeDetector: ChangeDetectorRef) {\r\n        this.differ = differs.find([]).create(null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        if(this.lazy) {\r\n            this.onLazyLoad.emit({\r\n                first: this.first,\r\n                rows: this.rows,\r\n                sortField: this.sortField,\r\n                sortOrder: this.sortOrder,\r\n                filters: null,\r\n                multiSortMeta: this.multiSortMeta\r\n            });\r\n        }\r\n    }\r\n    \r\n    ngAfterContentInit() {\r\n        this.initColumns();\r\n        \r\n        this.columnsSubscription = this.cols.changes.subscribe(_ => {\r\n            this.initColumns();\r\n            this.changeDetector.markForCheck();\r\n        });\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        if(this.columnsChanged && this.el.nativeElement.offsetParent) {\r\n            if(this.resizableColumns) {\r\n                this.initResizableColumns();\r\n            }\r\n\r\n            if(this.reorderableColumns) {\r\n                this.initColumnReordering();\r\n            }\r\n\r\n            if(this.scrollable) {\r\n                this.refreshScrolling();\r\n            }\r\n\r\n            this.columnsChanged = false;\r\n        }\r\n        \r\n        if(this.dataChanged) {\r\n            if(this.scrollable) {\r\n                this.refreshScrolling();\r\n            }\r\n            \r\n            this.dataChanged = false;\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if(this.globalFilter) {\r\n            this.globalFilterFunction = this.renderer.listen(this.globalFilter, 'keyup', () => {\r\n                this.filterTimeout = setTimeout(() => {\r\n                    this.filter();\r\n                    this.filterTimeout = null;\r\n                }, this.filterDelay);\r\n            });\r\n        }\r\n        \r\n        if(this.scrollable) {\r\n            this.initScrolling();\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        let changes = this.differ.diff(this.value);\r\n        if(changes) {\r\n            this.dataChanged = true;\r\n            if(this.paginator) {\r\n                this.updatePaginator();\r\n            }\r\n\r\n            if(this.hasFilter()) {\r\n                if(this.lazy) {\r\n                    //prevent loop\r\n                    if(this.lazyFilteredByUser)\r\n                        this.lazyFilteredByUser = true;\r\n                    else\r\n                        this.filter();\r\n                }\r\n                else {\r\n                    this.filter();\r\n                }\r\n            }\r\n                        \r\n            if(this.stopSortPropagation) {\r\n                this.stopSortPropagation = false;\r\n            }\r\n            else if(!this.lazy && (this.sortField||this.multiSortMeta)) {                    \r\n                if(this.sortMode == 'single')\r\n                    this.sortSingle();\r\n                else if(this.sortMode == 'multiple')\r\n                    this.sortMultiple();\r\n            }\r\n\r\n            this.updateDataToRender(this.filteredValue||this.value);\r\n        }\r\n    }\r\n    \r\n    initColumns(): void {\r\n        this.columns = this.cols.toArray();\r\n        this.columnsChanged = true;\r\n    }\r\n\r\n    resolveFieldData(data: any, field: string): any {\r\n        if(data && field) {\r\n            if(field.indexOf('.') == -1) {\r\n                return data[field];\r\n            }\r\n            else {\r\n                let fields: string[] = field.split('.');\r\n                let value = data;\r\n                for(var i = 0, len = fields.length; i < len; ++i) {\r\n                    value = value[fields[i]];\r\n                }\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    updatePaginator() {\r\n        //total records\r\n        this.totalRecords = this.lazy ? this.totalRecords : (this.value ? this.value.length: 0);\r\n\r\n        //first\r\n        if(this.totalRecords && this.first >= this.totalRecords) {\r\n            let numberOfPages = Math.ceil(this.totalRecords/this.rows);\r\n            this.first = Math.max((numberOfPages-1) * this.rows, 0);\r\n        }\r\n    }\r\n\r\n    paginate(event) {\r\n        this.first = event.first;\r\n        this.rows = event.rows;\r\n\r\n        if(this.lazy)\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        else\r\n            this.updateDataToRender(this.filteredValue||this.value);\r\n        \r\n        this.onPage.emit({\r\n            first: this.first,\r\n            rows: this.rows\r\n        });\r\n    }\r\n\r\n    updateDataToRender(datasource) {\r\n        if(this.paginator && datasource) {\r\n            this.dataToRender = [];\r\n            let startIndex = this.lazy ? 0 : this.first;\r\n            for(let i = startIndex; i < (startIndex+ this.rows); i++) {\r\n                if(i >= datasource.length) {\r\n                    break;\r\n                }\r\n\r\n                this.dataToRender.push(datasource[i]);\r\n            }\r\n        }\r\n        else {\r\n            this.dataToRender = datasource;\r\n        }\r\n    }\r\n    \r\n    onHeaderKeydown(event, column: Column) {\r\n        if(event.keyCode == 13) {\r\n            this.sort(event, column);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    \r\n    onHeaderMousedown(event, header: any) {\r\n        if(this.reorderableColumns) {\r\n            if(event.target.nodeName !== 'INPUT') {\r\n                header.draggable = true;\r\n            } else if(event.target.nodeName === 'INPUT') {\r\n                header.draggable = false;\r\n            }\r\n        }\r\n    }\r\n    \r\n    sort(event, column: Column) {\r\n        if(!column.sortable) {\r\n            return;\r\n        }\r\n        \r\n        let targetNode = event.target.nodeName;\r\n        if(targetNode == 'TH' || (targetNode == 'SPAN' && !this.domHandler.hasClass(event.target, 'ui-c'))) {\r\n            this.sortOrder = (this.sortField === column.field)  ? this.sortOrder * -1 : 1;\r\n            this.sortField = column.field;\r\n            this.sortColumn = column;\r\n            let metaKey = event.metaKey||event.ctrlKey;\r\n\r\n            if(this.lazy) {\r\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n            }\r\n            else {\r\n                if(this.sortMode == 'multiple') {\r\n                    if(!this.multiSortMeta||!metaKey) {\r\n                        this.multiSortMeta = [];\r\n                    }\r\n\r\n                    this.addSortMeta({field: this.sortField, order: this.sortOrder});\r\n                    this.sortMultiple();\r\n                }\r\n                else {\r\n                    this.sortSingle();\r\n                }\r\n            }\r\n            \r\n            this.onSort.emit({\r\n                field: this.sortField,\r\n                order: this.sortOrder,\r\n                multisortmeta: this.multiSortMeta\r\n            });\r\n        }\r\n    }\r\n\r\n    sortSingle() {\r\n        if(this.value) {\r\n            if(this.sortColumn && this.sortColumn.sortable === 'custom') {\r\n                this.sortColumn.sortFunction.emit({\r\n                    field: this.sortField,\r\n                    order: this.sortOrder\r\n                });\r\n            }\r\n            else {\r\n                this.value.sort((data1, data2) => {\r\n                    let value1 = this.resolveFieldData(data1, this.sortField);\r\n                    let value2 = this.resolveFieldData(data2, this.sortField);\r\n                    let result = null;\r\n\r\n                    if (value1 == null && value2 != null)\r\n                        result = -1;\r\n                    else if (value1 != null && value2 == null)\r\n                        result = 1;\r\n                    else if (value1 == null && value2 == null)\r\n                        result = 0;\r\n                    else if (typeof value1 === 'string' && typeof value2 === 'string')\r\n                        result = value1.localeCompare(value2);\r\n                    else\r\n                        result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\r\n\r\n                    return (this.sortOrder * result);\r\n                });\r\n            }\r\n            \r\n            this.first = 0;\r\n\r\n            if(this.hasFilter()) {\r\n                this.filter();\r\n            }\r\n        }\r\n        \r\n        //prevent resort at ngDoCheck\r\n        this.stopSortPropagation = true;\r\n    }\r\n\r\n    sortMultiple() {\r\n        if(this.value) {\r\n            this.value.sort((data1,data2) => {\r\n                return this.multisortField(data1, data2, this.multiSortMeta, 0);\r\n            });\r\n\r\n            if(this.hasFilter()) {\r\n                this.filter();\r\n            }\r\n        }\r\n        \r\n        //prevent resort at ngDoCheck\r\n        this.stopSortPropagation = true;\r\n    }\r\n\r\n    multisortField(data1,data2,multiSortMeta,index) {\r\n        let value1 = this.resolveFieldData(data1, multiSortMeta[index].field);\r\n        let value2 = this.resolveFieldData(data2, multiSortMeta[index].field);\r\n        let result = null;\r\n\r\n        if (typeof value1 == 'string' || value1 instanceof String) {\r\n            if (value1.localeCompare && (value1 != value2)) {\r\n                return (multiSortMeta[index].order * value1.localeCompare(value2));\r\n            }\r\n        }\r\n        else {\r\n            result = (value1 < value2) ? -1 : 1;\r\n        }\r\n\r\n        if(value1 == value2)  {\r\n            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, multiSortMeta, index + 1)) : 0;\r\n        }\r\n\r\n        return (multiSortMeta[index].order * result);\r\n    }\r\n\r\n    addSortMeta(meta) {\r\n        var index = -1;\r\n        for(var i = 0; i < this.multiSortMeta.length; i++) {\r\n            if(this.multiSortMeta[i].field === meta.field) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(index >= 0)\r\n            this.multiSortMeta[index] = meta;\r\n        else\r\n            this.multiSortMeta.push(meta);\r\n    }\r\n\r\n    isSorted(column: Column) {\r\n        if(this.sortMode === 'single') {\r\n            return (this.sortField && column.field === this.sortField);\r\n        }\r\n        else if(this.sortMode === 'multiple') {\r\n            let sorted = false;\r\n            if(this.multiSortMeta) {\r\n                for(let i = 0; i < this.multiSortMeta.length; i++) {\r\n                    if(this.multiSortMeta[i].field == column.field) {\r\n                        sorted = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return sorted;\r\n        }\r\n    }\r\n\r\n    getSortOrder(column: Column) {\r\n        let order = 0;\r\n        if(this.sortMode === 'single') {\r\n            if(this.sortField && column.field === this.sortField) {\r\n                order = this.sortOrder;\r\n            }\r\n        }\r\n        else if(this.sortMode === 'multiple') {\r\n            if(this.multiSortMeta) {\r\n                for(let i = 0; i < this.multiSortMeta.length; i++) {\r\n                    if(this.multiSortMeta[i].field == column.field) {\r\n                        order = this.multiSortMeta[i].order;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return order;\r\n    }\r\n    \r\n    handleRowClick(event, rowData) {\r\n        if(this.rowTouch) {\r\n            this.rowTouch = false;\r\n            return false;\r\n        }\r\n        \r\n        let targetNode = event.target.nodeName;\r\n        if(targetNode == 'TD' || (targetNode == 'SPAN' && !this.domHandler.hasClass(event.target, 'ui-c'))) {\r\n            this.onRowClick.next({originalEvent: event, data: rowData});\r\n            \r\n            if(!this.selectionMode) {\r\n                return;\r\n            }\r\n            \r\n            let metaKey = event.metaKey||event.ctrlKey;\r\n            let selected = this.isSelected(rowData);\r\n            \r\n            if(selected && metaKey) {\r\n                if(this.isSingleSelectionMode()) {\r\n                    this.selection = null;\r\n                    this.selectionChange.emit(null);\r\n                }\r\n                else {\r\n                    this.selection.splice(this.findIndexInSelection(rowData), 1);\r\n                    this.selectionChange.emit(this.selection);\r\n                }\r\n                \r\n                this.onRowUnselect.emit({originalEvent: event, data: rowData, type: 'row'});\r\n            }\r\n            else {\r\n                if(this.isSingleSelectionMode()) {\r\n                    this.selection = rowData;\r\n                    this.selectionChange.emit(rowData);\r\n                }\r\n                else if(this.isMultipleSelectionMode()) {\r\n                    if(metaKey)\r\n                        this.selection = this.selection||[];\r\n                    else \r\n                        this.selection = [];\r\n                    \r\n                    this.selection.push(rowData);\r\n                    this.selectionChange.emit(this.selection);\r\n                }\r\n\r\n                this.onRowSelect.emit({originalEvent: event, data: rowData, type: 'row'});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleRowTap(event, rowData) {\r\n        this.rowTouch = true;\r\n        \r\n        let targetNode = event.target.nodeName;\r\n        if(targetNode == 'TD' || (targetNode == 'SPAN' && !this.domHandler.hasClass(event.target, 'ui-c'))) {\r\n            this.onRowClick.next({originalEvent: event, data: rowData});\r\n            \r\n            if(!this.selectionMode) {\r\n                return;\r\n            }\r\n            \r\n            if(this.isSelected(rowData)) {\r\n                if(this.isSingleSelectionMode()) {\r\n                    this.selection = null;\r\n                    this.selectionChange.emit(null);\r\n                }\r\n                else {\r\n                    this.selection.splice(this.findIndexInSelection(rowData), 1);\r\n                    this.selectionChange.emit(this.selection);\r\n                }\r\n                \r\n                this.onRowUnselect.emit({originalEvent: event, data: rowData, type: 'row'});\r\n            }\r\n            else {\r\n                if(this.isSingleSelectionMode()) {\r\n                    this.selection = rowData;\r\n                    this.selectionChange.emit(rowData);\r\n                }\r\n                else if(this.isMultipleSelectionMode()) {\r\n                    this.selection = this.selection||[];\r\n                    this.selection.push(rowData);\r\n                    this.selectionChange.emit(this.selection);\r\n                }\r\n\r\n                this.onRowSelect.emit({originalEvent: event, data: rowData, type: 'row'});\r\n            }\r\n        }\r\n    }\r\n    \r\n    selectRowWithRadio(event, rowData:any) {\r\n        if(this.selection != rowData) {\r\n            this.selection = rowData;\r\n            this.selectionChange.emit(this.selection);\r\n            this.onRowSelect.emit({originalEvent: event, data: rowData, type: 'radiobutton'});\r\n        }\r\n    }\r\n    \r\n    toggleRowWithCheckbox(event,rowData) {\r\n        let selectionIndex = this.findIndexInSelection(rowData);\r\n        this.selection = this.selection||[];\r\n        \r\n        if(selectionIndex != -1) {\r\n            this.selection.splice(selectionIndex, 1);\r\n            this.onRowUnselect.emit({originalEvent: event, data: rowData, type: 'checkbox'});\r\n        }\r\n            \r\n        else {\r\n            this.selection.push(rowData);\r\n            this.onRowSelect.emit({originalEvent: event, data: rowData, type: 'checkbox'});\r\n        }\r\n                 \r\n        this.selectionChange.emit(this.selection);\r\n    }\r\n    \r\n    toggleRowsWithCheckbox(event) {\r\n        if(event.checked)\r\n            this.selection = this.dataToRender.slice(0);\r\n        else\r\n            this.selection = [];\r\n            \r\n        this.selectionChange.emit(this.selection);\r\n        \r\n        this.onHeaderCheckboxToggle.emit({originalEvent: event, checked: event.checked});\r\n    }\r\n    \r\n    onRowRightClick(event, rowData) {\r\n        if(this.contextMenu) {\r\n            let selectionIndex = this.findIndexInSelection(rowData);\r\n            let selected = selectionIndex != -1;\r\n            \r\n            if(!selected) {\r\n                if(this.isSingleSelectionMode()) {\r\n                    this.selection = rowData;\r\n                    this.selectionChange.emit(rowData);\r\n                }\r\n                else if(this.isMultipleSelectionMode()) {\r\n                    this.selection = [];\r\n                    this.selection.push(rowData);\r\n                    this.selectionChange.emit(this.selection);\r\n                }\r\n            }\r\n\r\n            this.contextMenu.show(event);            \r\n            this.onContextMenuSelect.emit({originalEvent: event, data: rowData});\r\n        }\r\n    }\r\n\r\n    rowDblclick(event, rowData) {\r\n        this.onRowDblclick.emit({originalEvent: event, data: rowData});\r\n    }\r\n\r\n    isSingleSelectionMode() {\r\n        return this.selectionMode === 'single';\r\n    }\r\n\r\n    isMultipleSelectionMode() {\r\n        return this.selectionMode === 'multiple';\r\n    }\r\n\r\n    findIndexInSelection(rowData: any) {\r\n        let index: number = -1;\r\n        if(this.selection) {\r\n            for(let i = 0; i  < this.selection.length; i++) {\r\n                if(this.domHandler.equals(rowData, this.selection[i])) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    isSelected(rowData) {\r\n        return ((rowData && this.domHandler.equals(rowData, this.selection)) || this.findIndexInSelection(rowData) != -1);\r\n    }\r\n    \r\n    get allSelected() {\r\n        let val = true;\r\n        if(this.dataToRender && this.selection && (this.dataToRender.length == this.selection.length)) {\r\n            for(let data of this.dataToRender) {\r\n                if(!this.isSelected(data)) {\r\n                    val = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            val = false;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    onFilterKeyup(value, field, matchMode) {\r\n        if(this.filterTimeout) {\r\n            clearTimeout(this.filterTimeout);\r\n        }\r\n\r\n        this.filterTimeout = setTimeout(() => {\r\n            if(value && value.trim().length)\r\n                this.filters[field] = {value: value, matchMode: matchMode};\r\n            else if(this.filters[field])\r\n                delete this.filters[field];\r\n            \r\n            if(this.lazy) {\r\n                this.lazyFilteredByUser = true;\r\n            }\r\n            \r\n            this.filter();\r\n            this.filterTimeout = null;            \r\n        }, this.filterDelay);\r\n    }\r\n\r\n    filter() {\r\n        this.first = 0;\r\n        \r\n        if(this.lazy) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        }\r\n        else {\r\n            this.filteredValue = [];\r\n\r\n            for(let i = 0; i < this.value.length; i++) {\r\n                let localMatch = true;\r\n                let globalMatch = false;\r\n\r\n                for(let j = 0; j < this.columns.length; j++) {\r\n                    let col = this.columns[j],\r\n                    filterMeta = this.filters[col.field];\r\n\r\n                    //local\r\n                    if(filterMeta) {\r\n                        let filterValue = filterMeta.value,\r\n                        filterField = col.field,\r\n                        filterMatchMode = filterMeta.matchMode||'startsWith',\r\n                        dataFieldValue = this.resolveFieldData(this.value[i], filterField);\r\n\r\n                        let filterConstraint = this.filterConstraints[filterMatchMode];\r\n\r\n                        if(!filterConstraint(dataFieldValue, filterValue)) {\r\n                            localMatch = false;\r\n                        }\r\n\r\n                        if(!localMatch) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    //global\r\n                    if(this.globalFilter && !globalMatch) {\r\n                        globalMatch = this.filterConstraints['contains'](this.resolveFieldData(this.value[i], col.field), this.globalFilter.value);\r\n                    }\r\n                }\r\n\r\n                let matches = localMatch;\r\n                if(this.globalFilter) {\r\n                    matches = localMatch&&globalMatch;\r\n                }\r\n\r\n                if(matches) {\r\n                    this.filteredValue.push(this.value[i]);\r\n                }\r\n            }\r\n\r\n            if(this.filteredValue.length === this.value.length) {\r\n                this.filteredValue = null;\r\n            }\r\n\r\n            if(this.paginator) {\r\n                this.totalRecords = this.filteredValue ? this.filteredValue.length: this.value ? this.value.length: 0;\r\n            }\r\n\r\n            this.updateDataToRender(this.filteredValue||this.value);\r\n        }\r\n        \r\n        this.onFilter.emit({\r\n            filters: this.filters\r\n        });\r\n    }\r\n\r\n    hasFilter() {\r\n        let empty = true;\r\n        for(let prop in this.filters) {\r\n            if(this.filters.hasOwnProperty(prop)) {\r\n                empty = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return !empty;\r\n    }\r\n\r\n    onFilterInputClick(event) {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    filterConstraints = {\r\n\r\n        startsWith(value, filter): boolean {\r\n            if(filter === undefined || filter === null || filter.trim() === '') {\r\n                return true;\r\n            }\r\n\r\n            if(value === undefined || value === null) {\r\n                return false;\r\n            }\r\n\r\n            let filterValue = filter.toLowerCase();\r\n            return value.toString().toLowerCase().slice(0, filterValue.length) === filterValue;\r\n        },\r\n\r\n        contains(value, filter): boolean {\r\n            if(filter === undefined || filter === null || filter.trim() === '') {\r\n                return true;\r\n            }\r\n\r\n            if(value === undefined || value === null) {\r\n                return false;\r\n            }\r\n\r\n            return value.toString().toLowerCase().indexOf(filter.toLowerCase()) !== -1;\r\n        },\r\n\r\n        endsWith(value, filter): boolean {\r\n            if(filter === undefined || filter === null || filter.trim() === '') {\r\n                return true;\r\n            }\r\n\r\n            if(value === undefined || value === null) {\r\n                return false;\r\n            }\r\n\r\n            let filterValue = filter.toString().toLowerCase();\r\n            return value.toString().toLowerCase().indexOf(filterValue, value.toString().length - filterValue.length) !== -1;\r\n        }\r\n    }\r\n\r\n    switchCellToEditMode(element: any, column: Column, rowData: any) {\r\n        if(!this.selectionMode && this.editable && column.editable) {\r\n            let cell = this.findCell(element);\r\n            if(cell != this.editingCell) {\r\n                this.editingCell = cell;\r\n                this.onEditInit.emit({column: column, data: rowData});\r\n                if(!this.domHandler.hasClass(cell, 'ui-cell-editing')) {\r\n                    this.domHandler.addClass(cell, 'ui-cell-editing');\r\n                    this.domHandler.addClass(cell, 'ui-state-highlight');\r\n                    let editor = cell.querySelector('.ui-cell-editor').focus();\r\n                }                \r\n            }\r\n        }\r\n    }\r\n\r\n    switchCellToViewMode(element: any, column: Column, rowData: any, complete: boolean) {\r\n        if(this.editable) {\r\n            if(this.preventBlurOnEdit) {\r\n                this.preventBlurOnEdit = false;\r\n            }\r\n            else {\r\n                if(complete)\r\n                    this.onEditComplete.emit({column: column, data: rowData});\r\n                else\r\n                    this.onEditCancel.emit({column: column, data: rowData});\r\n\r\n                let cell = this.findCell(element);\r\n                this.domHandler.removeClass(cell, 'ui-cell-editing');\r\n                this.domHandler.removeClass(cell, 'ui-state-highlight');\r\n                this.editingCell = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    onCellEditorKeydown(event, column: Column, rowData: any, colIndex: number) {\r\n        if(this.editable) {\r\n            this.onEdit.emit({originalEvent: event,column: column, data: rowData});\r\n            \r\n            //enter\r\n            if(event.keyCode == 13) {\r\n                this.switchCellToViewMode(event.target, column, rowData, true);\r\n                this.preventBlurOnEdit = true;\r\n                event.preventDefault();\r\n            }\r\n            \r\n            //escape\r\n            else if(event.keyCode == 27) {\r\n                this.switchCellToViewMode(event.target, column, rowData, false);\r\n                this.preventBlurOnEdit = true;\r\n                event.preventDefault();\r\n            }\r\n            \r\n            //tab\r\n            else if(event.keyCode == 9) {\r\n                let currentCell = this.findCell(event.target);\r\n                let row = currentCell.parentElement;\r\n                let targetCell;\r\n                \r\n                if(event.shiftKey) {\r\n                    if(colIndex == 0) {\r\n                        let previousRow = row.previousElementSibling;\r\n                        if(previousRow) {\r\n                            targetCell = previousRow.lastElementChild;\r\n                        }\r\n                    }\r\n                    else {\r\n                        targetCell = row.children[colIndex - 1];\r\n                    }\r\n                }\r\n                else {\r\n                    if(colIndex == (row.children.length - 1)) {\r\n                        let nextRow = row.nextElementSibling;\r\n                        if(nextRow) {\r\n                            targetCell = nextRow.firstElementChild;\r\n                        }\r\n                    }\r\n                    else {\r\n                        targetCell = row.children[colIndex + 1];\r\n                    }\r\n                }\r\n                \r\n                if(targetCell) {\r\n                    this.renderer.invokeElementMethod(targetCell, 'click');\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findCell(element) {\r\n        let cell = element;\r\n        while(cell.tagName != 'TD') {\r\n            cell = cell.parentElement;\r\n        }\r\n\r\n        return cell;\r\n    }\r\n\r\n    initResizableColumns() {\r\n        this.tbody = this.domHandler.findSingle(this.el.nativeElement, 'tbody.ui-datatable-data');\r\n        this.resizerHelper = this.domHandler.findSingle(this.el.nativeElement, 'div.ui-column-resizer-helper');\r\n        this.fixColumnWidths();\r\n        \r\n        this.documentColumnResizeListener = this.renderer.listenGlobal('body', 'mousemove', (event) => {\r\n            if(this.columnResizing) {\r\n                this.onColumnResize(event);\r\n            }\r\n        });\r\n        \r\n        this.documentColumnResizeEndListener = this.renderer.listenGlobal('body', 'mouseup', (event) => {\r\n            if(this.columnResizing) {\r\n                this.columnResizing = false;\r\n                this.onColumnResizeEnd(event);\r\n            }\r\n        });\r\n    }\r\n    \r\n    initColumnResize(event) {\r\n        this.resizeColumn = event.target.parentElement;\r\n        this.columnResizing = true;\r\n        this.lastPageX = event.pageX;\r\n    }\r\n    \r\n    onColumnResize(event) {\r\n        let container = this.el.nativeElement.children[0];\r\n        this.domHandler.addClass(container, 'ui-unselectable-text');\r\n        this.resizerHelper.style.height = container.offsetHeight - 4 + 'px';\r\n        this.resizerHelper.style.top = container.offsetTop + 'px';\r\n        if(event.pageX > container.offsetLeft && event.pageX < (container.offsetLeft + container.offsetWidth)) {\r\n            this.resizerHelper.style.left = event.pageX + 'px';\r\n        }\r\n        \r\n        this.resizerHelper.style.display = 'block';\r\n    }\r\n    \r\n    onColumnResizeEnd(event) {\r\n        let delta = this.resizerHelper.offsetLeft - this.lastPageX;\r\n        let columnWidth = this.resizeColumn.offsetWidth;\r\n        let newColumnWidth = columnWidth + delta;\r\n        let minWidth = this.resizeColumn.style.minWidth||15;\r\n        \r\n        if(columnWidth + delta > parseInt(minWidth)) {\r\n            if(this.columnResizeMode === 'fit') {\r\n                let nextColumn = this.resizeColumn.nextElementSibling;\r\n                let nextColumnWidth = nextColumn.offsetWidth - delta;\r\n                \r\n                if(newColumnWidth > 15 && nextColumnWidth > 15) {\r\n                    this.resizeColumn.style.width = newColumnWidth + 'px';\r\n                    if(nextColumn) {\r\n                        nextColumn.style.width = nextColumnWidth + 'px';\r\n                    }\r\n                }\r\n            }\r\n            else if(this.columnResizeMode === 'expand') {\r\n                this.tbody.parentElement.style.width = this.tbody.parentElement.offsetWidth + delta + 'px';\r\n                this.resizeColumn.style.width = newColumnWidth + 'px';\r\n            }    \r\n            \r\n            this.onColResize.emit({\r\n                element: this.resizeColumn,\r\n                delta: delta\r\n            });\r\n        }\r\n                \r\n        this.resizerHelper.style.display = 'none';\r\n        this.resizeColumn = null;\r\n        this.domHandler.removeClass(this.el.nativeElement.children[0], 'ui-unselectable-text');\r\n    }\r\n    \r\n    fixColumnWidths() {\r\n        let columns = this.domHandler.find(this.el.nativeElement, 'th.ui-resizable-column');\r\n        \r\n        for(let col of columns) {\r\n            col.style.width = col.offsetWidth + 'px';\r\n        }\r\n    }\r\n    \r\n    onColumnDragStart(event) {\r\n        if (this.columnResizing) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        this.draggedColumn = this.findParentHeader(event.target);\r\n        event.dataTransfer.setData('text', 'b'); // Firefox requires this to make dragging possible\r\n    }\r\n    \r\n    onColumnDragover(event) {\r\n        if(this.reorderableColumns && this.draggedColumn) {\r\n            event.preventDefault();\r\n            let dropHeader = this.findParentHeader(event.target);\r\n            \r\n            if(this.draggedColumn != dropHeader) {\r\n                let targetPosition = dropHeader.getBoundingClientRect();\r\n                let targetLeft = targetPosition.left + this.domHandler.getWindowScrollLeft();\r\n                let targetTop =  targetPosition.top + this.domHandler.getWindowScrollTop();\r\n                let columnCenter = targetLeft + dropHeader.offsetWidth / 2;\r\n                \r\n                this.reorderIndicatorUp.style.top = (targetTop - 16) + 'px';\r\n                this.reorderIndicatorDown.style.top = targetTop + dropHeader.offsetHeight + 'px';\r\n\r\n                if(event.pageX > columnCenter) {\r\n                    this.reorderIndicatorUp.style.left = (targetLeft + dropHeader.offsetWidth - 8) + 'px';\r\n                    this.reorderIndicatorDown.style.left = (targetLeft + dropHeader.offsetWidth - 8)+ 'px';\r\n                    this.dropPosition = 1;\r\n                }\r\n                else {\r\n                    this.reorderIndicatorUp.style.left = (targetLeft - 8) + 'px';\r\n                    this.reorderIndicatorDown.style.left = (targetLeft - 8)+ 'px';\r\n                    this.dropPosition = -1;\r\n                }\r\n                \r\n                this.reorderIndicatorUp.style.display = 'block';\r\n                this.reorderIndicatorDown.style.display = 'block';\r\n            }\r\n            else {\r\n                event.dataTransfer.dropEffect = 'none';\r\n            }\r\n        }\r\n    }\r\n    \r\n    onColumnDragleave(event) {\r\n        if(this.reorderableColumns && this.draggedColumn) {\r\n            event.preventDefault();\r\n            this.reorderIndicatorUp.style.display = 'none';\r\n            this.reorderIndicatorDown.style.display = 'none';\r\n        }\r\n    }\r\n    \r\n    onColumnDrop(event) {\r\n        event.preventDefault();\r\n        let dragIndex = this.domHandler.index(this.draggedColumn);\r\n        let dropIndex = this.domHandler.index(this.findParentHeader(event.target));\r\n        let allowDrop = (dragIndex != dropIndex);\r\n        if(allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\r\n            allowDrop = false;\r\n        }\r\n    \r\n        if(allowDrop) {\r\n            this.columns.splice(dropIndex, 0, this.columns.splice(dragIndex, 1)[0]);\r\n\r\n            this.onColReorder.emit({\r\n                dragIndex: dragIndex,\r\n                dropIndex: dropIndex,\r\n                columns: this.columns\r\n            });\r\n        }\r\n        \r\n        this.reorderIndicatorUp.style.display = 'none';\r\n        this.reorderIndicatorDown.style.display = 'none';\r\n        this.draggedColumn.draggable = false;\r\n        this.draggedColumn = null;\r\n        this.dropPosition = null;\r\n    }\r\n\r\n    initColumnReordering() {\r\n        this.reorderIndicatorUp = this.domHandler.findSingle(this.el.nativeElement.children[0], 'span.ui-datatable-reorder-indicator-up');\r\n        this.reorderIndicatorDown = this.domHandler.findSingle(this.el.nativeElement.children[0], 'span.ui-datatable-reorder-indicator-down');\r\n    }\r\n    \r\n    findParentHeader(element) {\r\n        if(element.nodeName == 'TH') {\r\n            return element;\r\n        }\r\n        else {\r\n            let parent = element.parentElement;\r\n            while(parent.nodeName != 'TH') {\r\n                parent = parent.parentElement;\r\n            }\r\n            return parent;\r\n        }\r\n    }\r\n\r\n    initScrolling() {\r\n        this.scrollHeader = this.domHandler.findSingle(this.el.nativeElement, '.ui-datatable-scrollable-header');\r\n        this.scrollHeaderBox = this.domHandler.findSingle(this.el.nativeElement, '.ui-datatable-scrollable-header-box');\r\n        this.scrollBody = this.domHandler.findSingle(this.el.nativeElement, '.ui-datatable-scrollable-body');\r\n        this.percentageScrollHeight = this.scrollHeight && (this.scrollHeight.indexOf('%') !== -1);\r\n        \r\n        this.bodyScrollListener = this.renderer.listen(this.scrollBody, 'scroll', () => {\r\n            this.scrollHeaderBox.style.marginLeft = -1 * this.scrollBody.scrollLeft + 'px';\r\n        });\r\n        \r\n        this.headerScrollListener = this.renderer.listen(this.scrollHeader, 'scroll', () => {\r\n            this.scrollHeader.scrollLeft = 0;\r\n        });\r\n        \r\n        if(this.percentageScrollHeight) {\r\n            this.resizeScrollListener = this.renderer.listenGlobal('window', 'resize', () => {\r\n                this.scrollBody.style.maxHeight = this.domHandler.getOuterHeight(this.el.nativeElement.parentElement) * (parseInt(this.scrollHeight) / 100) + 'px';\r\n            });\r\n        }\r\n    }\r\n    \r\n    refreshScrolling() {\r\n        let tableHeader = this.domHandler.findSingle(this.el.nativeElement, '.ui-datatable-header');\r\n        \r\n        if(this.scrollHeight) {\r\n            if(this.percentageScrollHeight) {\r\n                let relativeHeight = this.domHandler.getOuterHeight(this.el.nativeElement.parentElement) * (parseInt(this.scrollHeight) / 100);\r\n                let headerHeight =  this.domHandler.getOuterHeight(this.scrollHeader);\r\n                if(tableHeader) {\r\n                    headerHeight += this.domHandler.getOuterHeight(tableHeader);\r\n                }\r\n                this.scrollBody.style.maxHeight = (relativeHeight - headerHeight) + 'px';\r\n            }\r\n            else {\r\n                this.scrollBody.style.maxHeight = this.scrollHeight;\r\n            }\r\n\r\n            let marginRight = this.hasVerticalOverflow() ? this.calculateScrollbarWidth() : 0;\r\n            this.scrollHeaderBox.style.marginRight = marginRight + 'px';\r\n        }\r\n    }\r\n        \r\n    calculateScrollbarWidth(): number {\r\n        let scrollDiv = document.createElement(\"div\");\r\n        scrollDiv.className = \"ui-scrollbar-measure\";\r\n        document.body.appendChild(scrollDiv);\r\n\r\n        let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n        document.body.removeChild(scrollDiv);\r\n        \r\n        return scrollbarWidth;\r\n    }\r\n    \r\n    hasVerticalOverflow(): boolean {\r\n        return this.scrollHeight && this.domHandler.getOuterHeight(this.scrollBody.children[0]) > this.domHandler.getOuterHeight(this.scrollBody);\r\n    }\r\n\r\n    hasFooter() {\r\n        if(this.footerColumnGroup) {\r\n            return true;\r\n        }\r\n        else {\r\n            if(this.columns) {\r\n                for(let i = 0; i  < this.columns.length; i++) {\r\n                    if(this.columns[i].footer) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isEmpty() {\r\n        return !this.dataToRender||(this.dataToRender.length == 0);\r\n    }\r\n\r\n    createLazyLoadMetadata(): LazyLoadEvent {\r\n        return {\r\n            first: this.first,\r\n            rows: this.rows,\r\n            sortField: this.sortField,\r\n            sortOrder: this.sortOrder,\r\n            filters: this.filters,\r\n            multiSortMeta: this.multiSortMeta\r\n        };\r\n    }\r\n    \r\n    toggleRow(row: any) {\r\n        if(!this.expandedRows) {\r\n            this.expandedRows = [];\r\n        }\r\n        \r\n        let expandedRowIndex = this.findExpandedRowIndex(row);\r\n        \r\n        if(expandedRowIndex != -1) {\r\n            this.expandedRows.splice(expandedRowIndex, 1);\r\n            this.onRowCollapse.emit(row);\r\n        }\r\n        else {\r\n            this.expandedRows.push(row);\r\n            this.onRowExpand.emit(row);\r\n        }\r\n    }\r\n    \r\n    findExpandedRowIndex(row: any): number {\r\n        let index = -1\r\n        if(this.expandedRows) {\r\n            for(let i = 0; i < this.expandedRows.length; i++) {\r\n                if(this.expandedRows[i] == row) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n    \r\n    isRowExpanded(row) {\r\n        return this.findExpandedRowIndex(row) != -1;\r\n    }\r\n        \r\n    public reset() {\r\n        this.sortField = null;\r\n        this.sortOrder = 1;\r\n        \r\n        this.filteredValue = null;\r\n        this.filters = {};\r\n\r\n        if(this.paginator) {\r\n            this.paginate({\r\n                first: 0,\r\n                rows: this.rows\r\n            });\r\n        }\r\n        else {\r\n            this.updateDataToRender(this.value);\r\n        }\r\n    }\r\n\r\n    visibleColumns() {\r\n        return this.columns ? this.columns.filter(c => !c.hidden): [];\r\n    }\r\n    \r\n    public exportCSV() {\r\n        let data = this.value;\r\n        let csv = '';\r\n        \r\n        //headers\r\n        for(let i = 0; i < this.columns.length; i++) {\r\n            if(this.columns[i].field) {\r\n                csv += this.columns[i].field;\r\n                \r\n                if(i < (this.columns.length - 1)) {\r\n                    csv += this.csvSeparator;\r\n                }\r\n            }\r\n        }\r\n        \r\n        //body        \r\n        this.value.forEach((record, i) => {\r\n            csv += '\\n';\r\n            for(let i = 0; i < this.columns.length; i++) {\r\n                if(this.columns[i].field) {\r\n                    csv += this.resolveFieldData(record, this.columns[i].field);\r\n                    \r\n                    if(i < (this.columns.length - 1)) {\r\n                        csv += this.csvSeparator;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        \r\n        let blob = new Blob([csv],{\r\n            type: 'text/csv;charset=utf-8;'\r\n        });\r\n        \r\n        if(window.navigator.msSaveOrOpenBlob) {\r\n            navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');\r\n        }\r\n        else {\r\n            let link = document.createElement(\"a\");\r\n            link.style.display = 'none';\r\n            document.body.appendChild(link);\r\n            if(link.download !== undefined) {\r\n                link.setAttribute('href', URL.createObjectURL(blob));\r\n                link.setAttribute('download', this.exportFilename + '.csv');\r\n                document.body.appendChild(link);\r\n                link.click();\r\n            }\r\n            else {\r\n                csv = 'data:text/csv;charset=utf-8,' + csv;\r\n                window.open(encodeURI(csv));\r\n            }\r\n            document.body.removeChild(link);\r\n        }\r\n    }\r\n    \r\n    getBlockableElement(): HTMLElement {\r\n        return this.el.nativeElement.children[0];\r\n    }\r\n    \r\n    getRowStyleClass(rowData: any, rowIndex: number) {\r\n        let styleClass = 'ui-widget-content';\r\n        if(this.rowStyleClass) {\r\n            let rowClass = this.rowStyleClass.call(this, rowData, rowIndex);\r\n            if(rowClass) {\r\n                styleClass += ' ' + rowClass;\r\n            }\r\n        }\r\n        return styleClass;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        //remove event listener\r\n        if(this.globalFilterFunction) {\r\n            this.globalFilterFunction();\r\n        }\r\n        \r\n        if(this.scrollable) {\r\n            this.bodyScrollListener();\r\n            this.headerScrollListener();\r\n            \r\n            if(this.percentageScrollHeight) {\r\n                this.resizeScrollListener();\r\n            }\r\n        }\r\n        \r\n        if(this.resizableColumns) {\r\n            this.documentColumnResizeListener();\r\n            this.documentColumnResizeEndListener();\r\n        }\r\n        \r\n        if(this.columnsSubscription) {\r\n            this.columnsSubscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,SharedModule,PaginatorModule,FormsModule,InputTextModule],\r\n    exports: [DataTable,SharedModule],\r\n    declarations: [DataTable,DTRadioButton,DTCheckbox,RowExpansionLoader]\r\n})\r\nexport class DataTableModule { }\r\n"]}