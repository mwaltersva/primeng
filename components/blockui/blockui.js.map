{"version":3,"file":"blockui.js","sourceRoot":"","sources":["blockui.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAuF,eAAe,CAAC,CAAA;AACvG,uBAA2B,iBAAiB,CAAC,CAAA;AAC7C,2BAAyB,mBAAmB,CAAC,CAAA;AAU7C;IAQI,iBAAmB,EAAc,EAAQ,UAAsB;QAA5C,OAAE,GAAF,EAAE,CAAY;QAAQ,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE1D,sBAAI,4BAAO;aAAX;YACL,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;aAED,UAAY,GAAY;YACpB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YAEpB,EAAE,CAAA,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACZ,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC;oBACb,IAAI,CAAC,KAAK,EAAE,CAAC;gBACjB,IAAI;oBACA,IAAI,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC;QACL,CAAC;;;OAXA;IAaD,iCAAe,GAAf;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAE/C,EAAE,CAAA,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACjD,MAAM,wDAAwD,CAAC;QACnE,CAAC;IACL,CAAC;IAED,uBAAK,GAAL;QACI,EAAE,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC5C,CAAC;QACD,IAAI,CAAC,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,uBAAU,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED,yBAAO,GAAP;QACI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,6BAAW,GAAX;IAEA,CAAC;IAjDD;QAAC,YAAK,EAAE;;2CAAA;IAQR;QAAC,YAAK,EAAE;;0CAAA;IAjBZ;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,wHAET;YACD,SAAS,EAAE,CAAC,uBAAU,CAAC;SAC1B,CAAC;;eAAA;IAqDF,cAAC;AAAD,CAAC,AApDD,IAoDC;AApDY,eAAO,UAoDnB,CAAA;AAOD;IAAA;IAA6B,CAAC;IAL9B;QAAC,eAAQ,CAAC;YACN,OAAO,EAAE,CAAC,qBAAY,CAAC;YACvB,OAAO,EAAE,CAAC,OAAO,CAAC;YAClB,YAAY,EAAE,CAAC,OAAO,CAAC;SAC1B,CAAC;;qBAAA;IAC2B,oBAAC;AAAD,CAAC,AAA9B,IAA8B;AAAjB,qBAAa,gBAAI,CAAA","sourcesContent":["import {NgModule,Component,Input,AfterViewInit,OnDestroy,EventEmitter,ElementRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from '../dom/domhandler';\r\nimport {BlockableUI} from '../common/api';\r\n\r\n@Component({\r\n    selector: 'p-blockUI',\r\n    template: `\r\n        <div class=\"ui-blockui ui-widget-overlay\" [ngStyle]=\"{display: blocked ? 'block' : 'none'}\"></div>\r\n    `,\r\n    providers: [DomHandler]\r\n})\r\nexport class BlockUI implements AfterViewInit,OnDestroy {\r\n\r\n    @Input() target: any;\r\n    \r\n    _blocked: boolean;\r\n    \r\n    _mask: HTMLDivElement;\r\n    \r\n    constructor(public el: ElementRef,public domHandler: DomHandler) {}\r\n    \r\n    @Input() get blocked(): boolean {\r\n        return this._blocked;\r\n    }\r\n    \r\n    set blocked(val: boolean) {\r\n        this._blocked = val;\r\n        \r\n        if(this._mask) {\r\n            if(this._blocked)\r\n                this.block();\r\n            else\r\n                this.unblock();\r\n        }\r\n    }\r\n    \r\n    ngAfterViewInit() {\r\n        this._mask = this.el.nativeElement.children[0];\r\n        \r\n        if(this.target && !this.target.getBlockableElement) {\r\n            throw 'Target of BlockUI must implement BlockableUI interface';\r\n        }\r\n    }\r\n        \r\n    block() {\r\n        if(this.target) {\r\n            this.target.getBlockableElement().appendChild(this._mask);\r\n            this.target.style.position = 'relative';\r\n        }\r\n        else {\r\n            document.body.appendChild(this._mask);\r\n        }\r\n        \r\n        this._mask.style.zIndex = String(++DomHandler.zindex);\r\n    }\r\n    \r\n    unblock() {\r\n        this.el.nativeElement.appendChild(this._mask);\r\n    }\r\n    \r\n    ngOnDestroy() {\r\n        \r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [BlockUI],\r\n    declarations: [BlockUI]\r\n})\r\nexport class BlockUIModule { }"]}