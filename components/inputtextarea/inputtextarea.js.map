{"version":3,"file":"inputtextarea.js","sourceRoot":"","sources":["inputtextarea.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,OnInit} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n@Directive({\r\n    selector: '[pInputTextarea]',\r\n    host: {\r\n        '[class.ui-inputtext]': 'true',\r\n        '[class.ui-corner-all]': 'true',\r\n        '[class.ui-state-default]': 'true',\r\n        '[class.ui-widget]': 'true',\r\n        '[class.ui-state-hover]': 'hover',\r\n        '[class.ui-state-focus]': 'focus',\r\n        '[class.ui-state-disabled]': 'disabled',\r\n        '[class.ui-state-filled]': 'filled',\r\n        '[attr.rows]': 'rows',\r\n        '[attr.cols]': 'cols'\r\n    }\r\n})\r\nexport class InputTextarea implements OnInit {\r\n    \r\n    @Input() autoResize: boolean;\r\n    \r\n    @Input() rows: number;\r\n    \r\n    @Input() cols: number;\r\n\r\n    hover: boolean;\r\n    \r\n    focus: boolean;\r\n    \r\n    rowsDefault: number;\r\n    \r\n    colsDefault: number;\r\n        \r\n    constructor(public el: ElementRef) {}\r\n    \r\n    ngOnInit() {\r\n        this.rowsDefault = this.rows;\r\n        this.colsDefault = this.cols;\r\n    }\r\n    \r\n    @HostListener('mouseover', ['$event']) \r\n    onMouseover(e) {\r\n        this.hover = true;\r\n    }\r\n    \r\n    @HostListener('mouseout', ['$event']) \r\n    onMouseout(e) {\r\n        this.hover = false;\r\n    }\r\n    \r\n    @HostListener('focus', ['$event']) \r\n    onFocus(e) {\r\n        this.focus = true;\r\n        \r\n        if(this.autoResize) {\r\n            this.resize();\r\n        }\r\n    }\r\n    \r\n    @HostListener('blur', ['$event']) \r\n    onBlur(e) {\r\n        this.focus = false;\r\n        \r\n        if(this.autoResize) {\r\n            this.resize();\r\n        }\r\n    }\r\n    \r\n    @HostListener('keyup', ['$event']) \r\n    onKeyup(e) {\r\n        if(this.autoResize) {\r\n            this.resize();\r\n        }\r\n    }\r\n    \r\n    resize () {\r\n        let linesCount = 0,\r\n        lines = this.el.nativeElement.value.split('\\n');\r\n\r\n        for(let i = lines.length-1; i >= 0 ; --i) {\r\n            linesCount += Math.floor((lines[i].length / this.colsDefault) + 1);\r\n        }\r\n\r\n        this.rows = (linesCount >= this.rowsDefault) ? (linesCount + 1) : this.rowsDefault;\r\n    }\r\n    \r\n    get disabled(): boolean {\r\n        return this.el.nativeElement.disabled;\r\n    }\r\n    \r\n    get filled(): boolean {\r\n        return this.el.nativeElement.value != '';\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [InputTextarea],\r\n    declarations: [InputTextarea]\r\n})\r\nexport class InputTextareaModule { }"]}